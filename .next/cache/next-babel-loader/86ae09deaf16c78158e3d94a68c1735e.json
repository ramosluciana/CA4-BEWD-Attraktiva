{"ast":null,"code":"import mongoose from \"mongoose\";\nimport shortid from \"shortid\"; // package to be used to generate unique ID\n\nconst {\n  String,\n  Number\n} = mongoose.Schema.Types; //Modelling product data\n\nconst ProductSchema = new mongoose.Schema({\n  //including multiple properties/conditions\n  name: {\n    type: String,\n    required: true //Make sure product name is provided in order to add a new one\n\n  },\n  price: {\n    type: Number,\n    required: true //Make sure price is provided\n\n  },\n  sku: {\n    type: String,\n    unique: true,\n    //Value has to be unique, no other produc can receive the same value\n    default: shortid.generate() //Use to generate ID\n\n  },\n  description: {\n    type: String,\n    required: true\n  },\n  mediaUrl: {\n    type: String,\n    required: true\n  }\n}); //check if models exists. If it exists then we will use it otherwise we want to create it\n\nexport default mongoose.models.Product || mongoose.model(\"Product\", ProductSchema);","map":{"version":3,"sources":["/workspace/CA4-BEWD-Attraktiva/models/Product.js"],"names":["mongoose","shortid","String","Number","Schema","Types","ProductSchema","name","type","required","price","sku","unique","default","generate","description","mediaUrl","models","Product","model"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,OAAOC,OAAP,MAAoB,SAApB,C,CAA+B;;AAE/B,MAAM;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,IAAqBH,QAAQ,CAACI,MAAT,CAAgBC,KAA3C,C,CAEA;;AACA,MAAMC,aAAa,GAAG,IAAIN,QAAQ,CAACI,MAAb,CAAoB;AACxC;AACAG,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAEN,MADF;AAEJO,IAAAA,QAAQ,EAAE,IAFN,CAEW;;AAFX,GAFkC;AAMxCC,EAAAA,KAAK,EAAE;AACLF,IAAAA,IAAI,EAAEL,MADD;AAELM,IAAAA,QAAQ,EAAE,IAFL,CAEU;;AAFV,GANiC;AAUxCE,EAAAA,GAAG,EAAE;AACHH,IAAAA,IAAI,EAAEN,MADH;AAEHU,IAAAA,MAAM,EAAE,IAFL;AAEW;AACdC,IAAAA,OAAO,EAAEZ,OAAO,CAACa,QAAR,EAHN,CAGyB;;AAHzB,GAVmC;AAexCC,EAAAA,WAAW,EAAE;AACXP,IAAAA,IAAI,EAAEN,MADK;AAEXO,IAAAA,QAAQ,EAAE;AAFC,GAf2B;AAmBxCO,EAAAA,QAAQ,EAAE;AACRR,IAAAA,IAAI,EAAEN,MADE;AAERO,IAAAA,QAAQ,EAAE;AAFF;AAnB8B,CAApB,CAAtB,C,CAyBA;;AACA,eAAeT,QAAQ,CAACiB,MAAT,CAAgBC,OAAhB,IACblB,QAAQ,CAACmB,KAAT,CAAe,SAAf,EAA0Bb,aAA1B,CADF","sourcesContent":["import mongoose from \"mongoose\";\nimport shortid from \"shortid\"; // package to be used to generate unique ID\n\nconst { String, Number } = mongoose.Schema.Types;\n\n//Modelling product data\nconst ProductSchema = new mongoose.Schema({\n  //including multiple properties/conditions\n  name: {\n    type: String,\n    required: true //Make sure product name is provided in order to add a new one\n  },\n  price: {\n    type: Number,\n    required: true //Make sure price is provided\n  },\n  sku: {\n    type: String,\n    unique: true, //Value has to be unique, no other produc can receive the same value\n    default: shortid.generate() //Use to generate ID\n  },\n  description: {\n    type: String,\n    required: true\n  },\n  mediaUrl: {\n    type: String,\n    required: true\n  }\n});\n\n//check if models exists. If it exists then we will use it otherwise we want to create it\nexport default mongoose.models.Product ||\n  mongoose.model(\"Product\", ProductSchema);\n"]},"metadata":{},"sourceType":"module"}