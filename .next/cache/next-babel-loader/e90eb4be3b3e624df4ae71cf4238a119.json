{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\16. Upload Product Image, Post Product\\\\pages\\\\product.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport axios from \"axios\";\nimport ProductSummary from \"../components/Product/ProductSummary\";\nimport ProductAttributes from \"../components/Product/ProductAttributes\";\nimport baseUrl from \"../utils/baseUrl\";\n\nfunction Product({\n  product\n}) {\n  return __jsx(React.Fragment, null, __jsx(ProductSummary, _extends({}, product, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  })), __jsx(ProductAttributes, _extends({}, product, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  })));\n} //Fetch product data to the server\n\n\nProduct.getInitialProps = async ({\n  query: {\n    _id\n  }\n}) => {\n  {\n    /* Make a request to a new endpoint that will allow to get the product from the\n     products collection based on its I.D. */\n  }\n  const url = `${baseUrl}/api/product`;\n  const payload = {\n    params: {\n      _id\n    }\n  };\n  const response = await axios.get(url, payload);\n  return {\n    product: response.data\n  };\n};\n\nexport default Product;","map":{"version":3,"sources":["C:/Users/User/Desktop/16. Upload Product Image, Post Product/pages/product.js"],"names":["axios","ProductSummary","ProductAttributes","baseUrl","Product","product","getInitialProps","query","_id","url","payload","params","response","get","data"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,iBAAP,MAA8B,yCAA9B;AACA,OAAOC,OAAP,MAAoB,kBAApB;;AAEA,SAASC,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA8B;AAC5B,SACE,4BACE,MAAC,cAAD,eAAoBA,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAEE,MAAC,iBAAD,eAAuBA,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,CADF;AAMD,C,CAED;;;AACAD,OAAO,CAACE,eAAR,GAA0B,OAAO;AAAEC,EAAAA,KAAK,EAAE;AAAEC,IAAAA;AAAF;AAAT,CAAP,KAA8B;AACtD;AAAC;;AAC0C;AAC3C,QAAMC,GAAG,GAAI,GAAEN,OAAQ,cAAvB;AACA,QAAMO,OAAO,GAAG;AAAEC,IAAAA,MAAM,EAAE;AAAEH,MAAAA;AAAF;AAAV,GAAhB;AACA,QAAMI,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAUJ,GAAV,EAAeC,OAAf,CAAvB;AACA,SAAO;AAAEL,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAApB,GAAP;AACD,CAPD;;AASA,eAAeV,OAAf","sourcesContent":["import axios from \"axios\";\nimport ProductSummary from \"../components/Product/ProductSummary\";\nimport ProductAttributes from \"../components/Product/ProductAttributes\";\nimport baseUrl from \"../utils/baseUrl\";\n\nfunction Product({ product }) {\n  return (\n    <>\n      <ProductSummary {...product} />\n      <ProductAttributes {...product} />\n    </>\n  );\n}\n\n//Fetch product data to the server\nProduct.getInitialProps = async ({ query: { _id } }) => {\n  {/* Make a request to a new endpoint that will allow to get the product from the\n    products collection based on its I.D. */}\n  const url = `${baseUrl}/api/product`;\n  const payload = { params: { _id } };\n  const response = await axios.get(url, payload);\n  return { product: response.data };\n};\n\nexport default Product;\n"]},"metadata":{},"sourceType":"module"}